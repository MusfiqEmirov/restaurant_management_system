
services:
  web:
    build:
      context: .
    command: gunicorn --workers 3 --timeout 120 --bind 0.0.0.0:8000 restora_project.wsgi:application
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - logs_volume:/app/logs
    depends_on:
      - postgres
      - elasticsearch
      - redis
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - CELERY_BROKER_URL=redis://redis:6379/0
    env_file:
      - .env
    networks:
      - restaurant_network

  celery:
    build:
      context: .
    command: celery -A restora_project worker -l INFO
    volumes:
      - .:/app
      - logs_volume:/app/logs
    depends_on:
      - postgres
      - redis
      - web
    env_file:
      - .env
    networks:
      - restaurant_network

  celery-beat:
    build:
      context: .
    command: celery -A restora_project beat -l INFO
    volumes:
      - .:/app
      - logs_volume:/app/logs
    depends_on:
      - postgres
      - redis
      - web
      - celery
    env_file:
      - .env
    networks:
      - restaurant_network

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - restaurant_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - restaurant_network

  redis:
    image: redis:alpine
    networks:
      - restaurant_network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
      - logs_volume:/app/logs
    ports:
      - "80:80"
    depends_on:
      - web
      - celery
      - celery-beat
    networks:
      - restaurant_network

networks:
  restaurant_network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
  logs_volume:
